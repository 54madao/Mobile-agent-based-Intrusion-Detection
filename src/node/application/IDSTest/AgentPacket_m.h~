//
// Generated file, do not edit! Created by nedtool 4.6 from src/node/application/IDSTest/AgentPacket.msg.
//

#ifndef _AGENTPACKET_M_H_
#define _AGENTPACKET_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "ApplicationPacket_m.h"
// }}

/**
 * Struct generated from src/node/application/IDSTest/AgentPacket.msg:7 by nedtool.
 */
struct AgentInfo
{
    AgentInfo();
    opp_string content;
};

void doPacking(cCommBuffer *b, AgentInfo& a);
void doUnpacking(cCommBuffer *b, AgentInfo& a);

/**
 * Class generated from <tt>src/node/application/IDSTest/AgentPacket.msg:10</tt> by nedtool.
 * <pre>
 * packet AgentPacket extends ApplicationPacket
 * {
 *     AgentInfo extraData;
 * }
 * </pre>
 */
class AgentPacket : public ::ApplicationPacket
{
  protected:
    AgentInfo extraData_var;

  private:
    void copy(const AgentPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AgentPacket&);

  public:
    AgentPacket(const char *name=NULL, int kind=0);
    AgentPacket(const AgentPacket& other);
    virtual ~AgentPacket();
    AgentPacket& operator=(const AgentPacket& other);
    virtual AgentPacket *dup() const {return new AgentPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual AgentInfo& getExtraData();
    virtual const AgentInfo& getExtraData() const {return const_cast<AgentPacket*>(this)->getExtraData();}
    virtual void setExtraData(const AgentInfo& extraData);
};

inline void doPacking(cCommBuffer *b, AgentPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, AgentPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef _AGENTPACKET_M_H_

